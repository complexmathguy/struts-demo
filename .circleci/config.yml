version: 2.1


references:

working_directory: &working_directory
  /home/circleci/gitRoot/

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
        - *working_directory

jobs: 

  # core job
  build_test_project:

    # assign the working directory
    working_directory: *working_directory
        
    # run the steps with Docker as the primary container
    # job commands run in this container
    # CircleCI Java8 image, installs Apache Maven
    # MySQL 8 image
    docker:
      - image: circleci/openjdk:8-jdk-browsers
      - image: mysql:8.0
        # required env vars
        environment:
            MYSQL_USER: user
            MYSQL_PASSWORD: letmein2
            MYSQL_ALLOW_EMPTY_PASSWORD: no
            MYSQL_ROOT_PASSWORD: letmein2
            MYSQL_DATABASE: struts-demo

    # env var assignments
    environment:
        DATABASE_USERNAME: user
        DATABASE_PASSWORD: letmein2
        DATABASE_DIALECT: org.hibernate.dialect.MySQL8Dialect
        DATABASE_DRIVER: com.mysql.jdbc.Driver
        DATABASE_URL: jdbc:mysql://localhost:3306/struts-demo?createDatabaseIfNotExist=true
        

    # steps the core build test job
    steps:

      # check out source code to working directory
      - checkout
      # restore the saved cache after the first run or if `pom.xml` has changed
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - *restore_repo
      # changing ownership
      - run:
          name: Assigning vars for Git
          command: export EMAIL=circleci@circleci.com && export GIT_AUTHOR_NAME=CircleCi && export GIT_COMMITTER_NAME=CircleCi
          

      - run:
          name: Initializing.....
          command: |
            export DEFAULT_HOST_ADDRESS=127.0.0.1 
            export DEFAULT_HOST_PORT=27017 
            export DATABASE_USERNAME=root 
            export DATABASE_PASSWORD=letmein2 
            export DATABASE_DIALECT=org.hibernate.dialect.MySQL8Dialect 
            export DATABASE_DRIVER=com.mysql.cj.jdbc.Driver 
            export DATABASE_URL=jdbc:mysql://localhost:3306/struts-demo?createDatabaseIfNotExist=true 
      - run:
          name: Building with testing.....
          command: |
            mvn package 
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      # cache the entire project 
      - *save_repo
      # Upload test results for display in Test Summary:
      # https://circleci.com/docs/2.0/collect-test-data/
      - store_test_results:
          path: ~/test-results
      # Upload test summary for display in Artifacts:
      # https://circleci.com/docs/2.0/artifacts/
      - store_artifacts:
          path: ~/test-results/junit


  docker_build:
    # assign the working directory
    working_directory: *working_directory

    docker: # run the steps with Docker, this image is not used and therefore ignored
      - image: circleci/python:3.7  
      
    steps:
      - *restore_repo
      - setup_remote_docker
      - run:
          name: creating docker image..considering using env vars DOCKER_USER and DOCKER_PASS
          command: |
            docker login --username tylertravismya --password 69cutlass 
            docker build -t theharbormaster/struts-demo:latest -f Dockerfile .
            docker push theharbormaster/struts-demo:latest

# a workflow to build out the environment
workflows:
  build_test_deploy_workflow:
    jobs:
      - build_test_project:
          filters:
            tags:
              only: latest
      - docker_build:
          requires:
            - build_test_project
